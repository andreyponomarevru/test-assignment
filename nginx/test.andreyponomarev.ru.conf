upstream node {
  server localhost:8080;
}

server {
  listen 443;
  server_name "" localhost 127.0.0.1;
  return 444;
}

server {
  ##
  # SSL Ceryificate
  ##
 
  # if everything works fine, delete this line:
  # listen 443 ssl; 
  include snippets/listen-https;
  include snippets/ssl;
  include snippets/err-404;
  include snippets/err-50x;

  ##
  # Basic Settings
  ##

  server_name test.andreyponomarev.ru www.test.andreyponomarev.ru;

  proxy_set_header Host $host; # Forward "host" header to upstream server
  # Forward client IP information to upstream server
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  # Without this directive, when the 'Secure' cookie attribute in Express is 
  # 'true', Express wont't set a cookie. 
  # Also important: if you set 'proxy_set_header' in any of your 'location' 
  # blocks, all 'proxy_set_header' directives in outer blocks are NOT applied:
  # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
  proxy_set_header X-Forwarded-Proto $scheme;
  
  proxy_hide_header X-Powered-By;
  
  ##
  # Caching settings
  ##

  # Enable caching for static files (adds "Expires" and "Cache-Control" headers)
  # This line utilizes variable `$expires` which is defined and conditionally  
  # assigned some value at the very top in `map $sent_http_content_type 
  # $expires` block
  expires $expires;

  ##
  # Client (react.js)
  ##

  location / {
    root /var/www/test.andreyponomarev.ru/html; # This is the place we need to put HTML page in next step
    index index.html index.htm;
    try_files $uri $uri/ =404;
  
    # Gzip Settings
    gzip on;
    gzip_vary on;
    # gzip_proxied any; # http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  }

  ##
  # 'api' container 
  ##

  location = /api/users {
    limit_req zone=stream_like_limit; # Rate Limiting (see settings at the top of the file)
    proxy_pass http://api;
  }
}
